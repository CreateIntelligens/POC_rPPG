# =============================================================================
# docker-compose.yml - VitalLens 多服務容器編排配置
# 定義應用服務和 Nginx 反向代理服務的完整部署環境
# =============================================================================

services:
  # 主應用服務 - 運行 FastAPI 應用程式
  app:
    build:
      context: .                    # 構建上下文為當前目錄
      dockerfile: Dockerfile       # 使用自定義 Dockerfile
    container_name: app           # 容器名稱
    env_file:
      - .env                      # 載入環境變數文件
    volumes:
      # 完整卷掛載 - 掛載整個專案目錄以支援開發時的熱重載
      - .:/app
      # 掛載視頻設備以支援網路攝影機訪問（僅限 Linux）
      - /dev/video0:/dev/video0
    restart: unless-stopped        # 除非手動停止，否則自動重啟
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8894"]  # 健康檢查命令
      interval: 30s                 # 檢查間隔
      timeout: 10s                  # 檢查超時
      retries: 3                    # 重試次數
    privileged: true               # 特權模式，允許訪問主機設備

  # Nginx 反向代理服務 - 處理 HTTPS 和靜態文件服務
  proxy:
    image: nginx:alpine           # 使用輕量級 Nginx Alpine 映像
    container_name: proxy         # 容器名稱
    ports:
      - "8894:443"                # HTTPS 端口映射（主機:容器）
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro           # 主配置檔案
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro # 站點配置
      - ./nginx/ssl:/etc/nginx/ssl                            # SSL 證書目錄
      - ./nginx/generate-ssl.sh:/docker-entrypoint.d/01-generate-ssl.sh:ro  # SSL 生成腳本
    restart: unless-stopped        # 除非手動停止，否則自動重啟
    depends_on:
      - app                       # 依賴應用服務先啟動
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost/health"]  # HTTPS 健康檢查
      interval: 30s                 # 檢查間隔
      timeout: 10s                  # 檢查超時
      retries: 3                    # 重試次數
